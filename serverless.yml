service: celo-faucet-api
provider:
  name: aws
  runtime: nodejs10.x
  profile: default
  region: eu-central-1
  stage: ${opt:stage, 'dev'}
  environment:
    FAUCET_QUEUE_TABLE_NAME: ${self:service}-${self:provider.stage}-faucet-queue
    NODE_PROVIDER: 'https://baklava-forno.celo-testnet.org'
    SECRET_NAME: 'CELO_BAKLAVA_FAUCET_PRIVATE_KEY'
    REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::Join:
          - ':'
          -
            - 'arn:aws:dynamodb:${self:provider.region}'
            - Ref: 'AWS::AccountId'
            - 'table/${self:service}-${self:provider.stage}-*'
functions:  
  hello:
    handler: src/hello.handler
    events:
        - http:
            path: hello
            method: get
            cors: true
  faucetRequest:
    timeout: 15
    handler: src/createFaucetRequest.handler
    events:
        - http:
            path: request
            method: post
            cors: true
  faucetClaim:
    timeout: 15
    handler: src/claimFaucetRequest.handler
    events:
        - http:
            path: claim
            method: post
            cors: true           
  getFaucetRequest:
    timeout: 15
    handler: src/getFaucetRequests.handler
    events:
        - http:
            path: request
            method: get
            cors: true                                       
resources:
  Resources:
    FaucetTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-faucet-queue
        AttributeDefinitions:
          - AttributeName: requestId
            AttributeType: S
        KeySchema:
          - AttributeName: requestId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    GatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"          
          gatewayresponse.header.WWW-Authenticate: "'Basic'"
        ResponseType: UNAUTHORIZED
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        StatusCode: '401'        
